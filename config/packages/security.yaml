security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Admin:
            algorithm: md5
            encode_as_base64: false
            iterations: 0
        App\Entity\Utilisateur:
            algorithm: md5
            encode_as_base64: false
            iterations: 0
        App\Entity\User:
            algorithm: bcrypt            
    providers:
        main:
            entity:
                class: App\Entity\Admin
                property: email
        employe:
            entity:
                class: App\Entity\Utilisateur
                property: email
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false   
        login:
            provider: employe
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_public:
            pattern:   "^/api/utilisateur/register|api/password/forgot|api/doc|/login_check_custom"
            stateless: true
            anonymous: true
        api_secured:
            provider: employe
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        
        refresh:
            pattern:  ^/token/refresh
            stateless: true
            anonymous: true

        main:
            provider: main
            security: true
            anonymous: true
            switch_user: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path:   security_logout
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 172800 # 1 day in seconds
                path: /
        #main:
        #    anonymous: lazy
        #    provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: "^/ocrapi", roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: "^/person", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/api/login", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/api/password/forgot", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/api/utilisateur/register", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/nelmio/*", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/platform/*", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^/api", roles: IS_AUTHENTICATED_FULLY }
        - { path: "^/login", roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: "^/logout", roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: "^/resetting", roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: "^/logement-api", roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/.*, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
